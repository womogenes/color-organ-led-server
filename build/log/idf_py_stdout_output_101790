Command: ninja all
[1/13] Linking C static library esp-idf/mqtt/libmqtt.a
[2/13] Linking C static library esp-idf/spiffs/libspiffs.a
[3/13] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[4/13] Linking C static library esp-idf/fatfs/libfatfs.a
[5/13] Performing build step for 'bootloader'
[1/1] cd /home/willi/coding/esp/color_organ/build/bootloader/esp-idf/esptool_py && /home/willi/.espressif/python_env/idf6.0_py3.13_env/bin/python /home/willi/sw/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/willi/coding/esp/color_organ/build/bootloader/bootloader.bin
Bootloader binary size 0x66a0 bytes. 0x960 bytes (8%) free.
[6/13] No install step for 'bootloader'
[7/13] Completed 'bootloader'
[8/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/hello_world_main.c.obj
[9/13] Linking C static library esp-idf/main/libmain.a
[10/13] Generating esp-idf/esp_system/ld/sections.ld
[11/13] Linking CXX executable color_organ.elf
[12/13] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/willi/coding/esp/color_organ/build/color_organ.bin
[13/13] cd /home/willi/coding/esp/color_organ/build/esp-idf/esptool_py && /home/willi/.espressif/python_env/idf6.0_py3.13_env/bin/python /home/willi/sw/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/willi/coding/esp/color_organ/build/partition_table/partition-table.bin /home/willi/coding/esp/color_organ/build/color_organ.bin
color_organ.bin binary size 0xc6a90 bytes. Smallest app partition is 0x100000 bytes. 0x39570 bytes (22%) free.
